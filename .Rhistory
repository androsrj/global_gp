groupSize <- 1000
n <- nrow(coords_df)
groupStarts <- seq(1, (nGroups - 1) * groupSize, by = groupSize)
indices <- lapply(groupStarts, function(start) {
end <- start + groupSize - 1
return(c(start:end))
})
indices[[nGroups]] <- ((nGroups - 1) * groupSize + 1):n
# Read and save elevation data, one subset at a time
for (i in 1:nGroups) {
index <- indices[[i]]
subset <- coords_df[index, ]
elevs <- get_elev_point(subset, prj = prj_dd, src = "epqs")
new_df <- data.frame(subset, elev_meters = elevs$elevation)
saveRDS(new_df, paste0("elevs/subset", i, ".RDS"))
cat(paste0("Saved subset ", i, ".\n"))
}
i
elevs
new_df <- data.frame(subset, elev_meters = elevs$elevation)
saveRDS(new_df, paste0("elevs/subset", i, ".RDS"))
# Read and save elevation data, one subset at a time
for (i in 1:nGroups) {
index <- indices[[i]]
subset <- coords_df[index, ]
elevs <- get_elev_point(subset, prj = prj_dd, src = "epqs")
new_df <- data.frame(subset, elev_meters = elevs$elevation)
saveRDS(new_df, paste0("elevs/subset", i, ".RDS"))
cat(paste0("Saved subset ", i, ".\n"))
}
# Combine elevation data from all subsets
subsets <- lapply(1:nGroups, function(i) {
readRDS(paste0("elevs/subset", i, ".RDS"))
})
full_df <- do.call(rbind.data.frame, subsets)
dim(full_df)
head(full_df)
summary(full_df$elev_meters)
min(which(is.na(full_df$elev_meters)))
max(which(is.na(full_df$elev_meters)))
# Read and save elevation data, one subset at a time
for (i in 1:nGroups) {
index <- indices[[i]]
subset <- coords_df[index, ]
elevs <- get_elev_point(subset, prj = prj_dd, src = "epqs")
new_df <- data.frame(subset, elev_meters = elevs$elevation)
saveRDS(new_df, paste0("elevs/subset", i, ".RDS"))
cat(paste0("Saved subset ", i, ".\n"))
}
# Combine elevation data from all subsets
subsets <- lapply(1:nGroups, function(i) {
readRDS(paste0("elevs/subset", i, ".RDS"))
})
full_df <- do.call(rbind.data.frame, subsets)
dim(full_df)
sum(is.na(full_df$elev_meters))
saveRDS(full_df, "elev_data.RDS")
load("C:/Users/andro/OneDrive/Desktop/School/research/storm_surges/flood/data/flood_data.RData")
head(coords)
head(inputs)
load("C:/Users/andro/OneDrive/Desktop/School/research/storm_surges/flood/data/flood_data.RData")
setwd("~/research/global_gp")
n <- 100
nTest <- 25
S <- 10
STest <- 10
which.storms <- sample(4000, S + STest)
train.storms <- which.storms[1:S]
test.storms <- which.storms[(S+1):(S+STest)]
summary(coords$x)
summary(coords$y)
coords.subset <- coords[coords$x < -74.8 & coords$x > -74.82 & coords$y < 39.1 & coords$y > 39.05, ]
coords.subset <- coords[coords$x < -74.8 & coords$x > -74.82 & coords$y < 39.1 & coords$y > 39.07, ]
coords.subset <- coords[coords$x < -74.8 & coords$x > -74.82 & coords$y < 39.1 & coords$y > 39.87, ]
coords.subset <- coords[coords$x < -74.8 & coords$x > -74.82 & coords$y < 39.1 & coords$y > 39.8, ]
which.points <- sample(nrow(coords), n + nTest)
coords.subset <- coords[coords$x < -74.8 & coords$x > -74.82 & coords$y < 39.1 & coords$y > 39.08, ]
plot(coords.subset$x, coords.subset$y)
summary(coords.subset$elev_meters)
ggplot(data = coords, aes(x=x, y=y, col=elev_meters))
library(ggplot2)
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point()
ggplot(data = coords.subset, aes(x=x, y=y, col=elev_meters)) + geom_point()
ggplot(data = coords.subset, aes(x=x, y=y, fill=elev_meters)) + geom_tile()
size <- "small"
scen <- "scen2"
dir <- paste0("data/", size, "/", scen, "/")
load(paste0(dir, "train.RData"))
head(train$X)
X <- matrix(coords.subset$elev_meters[train.index], ncol = 1)
n <- 100
nTest <- 25
S <- 10
STest <- 10
which.storms <- sample(4000, S + STest)
train.storms <- which.storms[1:S]
test.storms <- which.storms[(S+1):(S+STest)]
coords.subset <- coords[coords$x < -74.8 & coords$x > -74.82 & coords$y < 39.1 & coords$y > 39.08, ]
which.points <- sample(nrow(coords.subset), n + nTest)
train.index <- which.points[1:n]
test.index <- which.points[(n+1):(n+nTest)]
X <- matrix(coords.subset$elev_meters[train.index], ncol = 1)
dim(X)
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() + geom_vline(-74.82)
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() + geom_vline(aes(-74.82))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() + geom_vline(aes(xintercept = -74.82))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_vline(aes(xintercept = c(-74.82, -74.8)))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_vline(aes(xintercept = -74.82)) + geom_vline(aes(xintercept = -74.8)) +
geom_hline(aes(yintercept = 39.1)) + geom_hline(aes(yintercept = 39.08)) +
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_vline(aes(xintercept = -74.82)) + geom_vline(aes(xintercept = -74.8)) +
geom_hline(aes(yintercept = 39.1)) + geom_hline(aes(yintercept = 39.08))
points <- data.frame('id' = c('A','B','B'),
'obj.id' = c('x1', 'x2', 'x3'),'x' = c(60, 65, 66),
'y' = c(130, 134, 135))
lines <- data.frame('id' = c('A','B'),
'x1' = c(58, 64), 'y1' = c(128, 132),
'x2' = c(61, 67), 'y2' = c(131, 135))
points
lines
dist2d <- function(a, b, c) {
v1 <- b - c
v2 <- a - b
m <- cbind(v1,v2)
d <- abs(det(m))/sqrt(sum(v1*v1))
}
a2 <- c(0,2)
b2 <- c(2,0)
c2 <- c(1,3)
d2 <- dist2d(a2,b2,c2)
dist2d(a2,b2,c2)
dist2d <- function(a, b, c) {
v1 <- b - c
v2 <- a - b
m <- cbind(v1,v2)
d <- abs(det(m))/sqrt(sum(v1*v1))
d
}
a2 <- c(0,2)
b2 <- c(2,0)
c2 <- c(1,3)
dist2d(a2,b2,c2)
sqrt((1.2)^2 + (.4)^2)
?geom_abline
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_vline(aes(xintercept = -74.82)) + geom_vline(aes(xintercept = -74.8)) +
geom_hline(aes(yintercept = 39.1)) + geom_hline(aes(yintercept = 39.08)) +
geom_abline(aes(slope=-5, intercept=37))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_vline(aes(xintercept = -74.82)) + geom_vline(aes(xintercept = -74.8)) +
geom_hline(aes(yintercept = 39.1)) + geom_hline(aes(yintercept = 38.98))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_vline(aes(xintercept = -74.82)) + geom_vline(aes(xintercept = -74.8)) +
geom_hline(aes(yintercept = 39.1)) + geom_hline(aes(yintercept = 38.99))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_vline(aes(xintercept = -74.82)) + geom_vline(aes(xintercept = -74.71)) +
geom_hline(aes(yintercept = 39.1)) + geom_hline(aes(yintercept = 38.99))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_vline(aes(xintercept = -74.8)) + geom_vline(aes(xintercept = -74.71)) +
geom_hline(aes(yintercept = 39.1)) + geom_hline(aes(yintercept = 38.99))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=11/9, intercept=130.412))
11/9
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=130.412))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.23, intercept=130.412))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.22222, intercept=130.412))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.2225, intercept=130.412))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.2225, intercept=130.415))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.225, intercept=130.415))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.223, intercept=130.415))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.223, intercept=130.42))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.223, intercept=130.5))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.223, intercept=130.48))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.223, intercept=130.47))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.224, intercept=130.5))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.224, intercept=130.6))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.224, intercept=130.54))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.224, intercept=130.55))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.225, intercept=130.65))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.225, intercept=130.62))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.23, intercept=130.8))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.23, intercept=131.2))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.23, intercept=131))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.24, intercept=131.5))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.24, intercept=132))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.24, intercept=131.75))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.5, intercept=132.1))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.1))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.4))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.6))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.47))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.48))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.725))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.3, intercept=136.5))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.4, intercept=144))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.4, intercept=143.7))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.4, intercept=143.9))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.4, intercept=144))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.4, intercept=143.95))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.5, intercept=151.4))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.5, intercept=151.6))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.5, intercept=151.47))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.5, intercept=151.46))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.7, intercept=166.4))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.7, intercept=166.5))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.7, intercept=166.46))
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) + geom_point() +
geom_abline(aes(slope=1.25, intercept=132.5)) +
geom_abline(aes(slope=1.7, intercept=166.45))
x1 <- -75
y1 <- west(x1)
west <- function(x) {
1.7*x + 166.45
}
east <- function(x) {
1.25*x + 132.5
}
x1 <- -75
y1 <- west(x1)
y1
x2.west <- -74.8
y2.west <- west(x2.west)
x1.east <- -74.9
y1.east <- east(x1.east)
x2.east <- -74.6
y2.east <- east(x2.east)
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) +
geom_point() +
geom_vline(aes(xintercept = -74.82)) +
geom_vline(aes(xintercept = -74.8)) +
geom_hline(aes(yintercept = 39.1)) +
geom_hline(aes(yintercept = 39.08))
load("C:/Users/andro/OneDrive/Desktop/School/research/storm_surges/flood/data/flood_data.RData")
n <- 100
nTest <- 25
S <- 10
STest <- 10
which.storms <- sample(4000, S + STest)
train.storms <- which.storms[1:S]
test.storms <- which.storms[(S+1):(S+STest)]
coords.subset <- coords[coords$x < -74.82 & coords$x > -74.84 & coords$y < 39.08 & coords$y > 39.06, ]
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) +
geom_point() +
geom_vline(aes(xintercept = -74.82)) +
geom_vline(aes(xintercept = -74.84)) +
geom_hline(aes(yintercept = 39.06)) +
geom_hline(aes(yintercept = 39.08))
ggplot(data = coords.subset, aes(x=x, y=y, col=elev_meters)) +
geom_tile()
ggplot(data = coords.subset, aes(x=x, y=y, fill=elev_meters)) +
geom_tile()
load("C:/Users/andro/OneDrive/Desktop/School/research/storm_surges/flood/data/flood_data.RData")
coords.subset <- coords[coords$x < -74.81 & coords$x > -74.83 & coords$y < 39.08 & coords$y > 39.06, ]
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) +
geom_point() +
geom_vline(aes(xintercept = -74.81)) +
geom_vline(aes(xintercept = -74.83)) +
geom_hline(aes(yintercept = 39.06)) +
geom_hline(aes(yintercept = 39.08))
ggplot(data = coords.subset, aes(x=x, y=y, fill=elev_meters)) +
geom_tile()
dist2d <- function(a, b, c) {
v1 <- b - c
v2 <- a - b
m <- cbind(v1,v2)
d <- abs(det(m))/sqrt(sum(v1*v1))
d
}
west <- function(x) {
1.7*x + 166.45
}
east <- function(x) {
1.25*x + 132.5
}
x1.west <- -75
y1.west <- west(x1.west)
x2.west <- -74.8
y2.west <- west(x2.west)
x1.east <- -74.9
y1.east <- east(x1.east)
x2.east <- -74.6
y2.east <- east(x2.east)
coords.subset$dist.west <- coords.subset$dist.east <- 0
for (i in 1:nrow(coords.subset)) {
loc <- c(coords.subset$x[i], coords.subset$y[i])
start <- c(x1.west, y1.west)
end <- c(x2.west, y2.west)
coords.subset$dist.west[i] <- dist2d(loc, start, end)
start <- c(x1.east, y1.east)
end <- c(x2.weast, y2.east)
coords.subset$dist.east[i] <- dist2d(loc, start, end)
}
coords.subset$dist.west <- coords.subset$dist.east <- 0
for (i in 1:nrow(coords.subset)) {
loc <- c(coords.subset$x[i], coords.subset$y[i])
start <- c(x1.west, y1.west)
end <- c(x2.west, y2.west)
coords.subset$dist.west[i] <- dist2d(loc, start, end)
start <- c(x1.east, y1.east)
end <- c(x2.east, y2.east)
coords.subset$dist.east[i] <- dist2d(loc, start, end)
}
head(coords.subset)
mean(coords.subset$dist.east < coords.subset$dist.west)
load("data/flood_data.RData")
n <- 100
nTest <- 25
S <- 10
STest <- 10
which.storms <- sample(4000, S + STest)
train.storms <- which.storms[1:S]
test.storms <- which.storms[(S+1):(S+STest)]
coords.subset <- coords[coords$x < -74.81 & coords$x > -74.83 & coords$y < 39.08 & coords$y > 39.06, ]
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) +
geom_point() +
geom_vline(aes(xintercept = -74.81)) +
geom_vline(aes(xintercept = -74.83)) +
geom_hline(aes(yintercept = 39.06)) +
geom_hline(aes(yintercept = 39.08))
source("coastlines.R")
head(coords.subset)
X <- cbind(coords.subset$elev_meters[train.index], coords.subset$dist.east[train.index])
which.points <- sample(nrow(coords.subset), n + nTest)
train.index <- which.points[1:n]
test.index <- which.points[(n+1):(n+nTest)]
X <- cbind(coords.subset$elev_meters[train.index], coords.subset$dist.east[train.index])
head(X)
Z <- inputs[STrain, 1:2]
Z <- inputs[train.storms, 1:2]
Y <- out[train.storms, train.index]
dim(Y)
Y[1:2,1:5]
c(Y)
Y[1:2,1:5]
class(Y)
Y <- as.matrix(out[train.storms, train.index])
Y[1:2,1:5]
c(Y)
Y <- t(as.matrix(out[train.storms, train.index]))
Y[1:2,1:5]
c(Y)
di(Y)
dim(Y)
Y <- c(t(as.matrix(out[train.storms, train.index])))
Y <- matrix(c(t(as.matrix(out[train.storms, train.index]))), ncol = 1)
dim(Y)
Z
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
library(fields)
load("data/flood_data.RData")
n <- 100
nTest <- 25
S <- 10
STest <- 10
which.storms <- sample(4000, S + STest)
train.storms <- which.storms[1:S]
test.storms <- which.storms[(S+1):(S+STest)]
coords.subset <- coords[coords$x < -74.81 & coords$x > -74.83 & coords$y < 39.08 & coords$y > 39.06, ]
ggplot(data = coords, aes(x=x, y=y, col=elev_meters)) +
geom_point() +
geom_vline(aes(xintercept = -74.81)) +
geom_vline(aes(xintercept = -74.83)) +
geom_hline(aes(yintercept = 39.06)) +
geom_hline(aes(yintercept = 39.08))
ggplot(data = coords.subset, aes(x=x, y=y, fill=elev_meters)) +
geom_tile()
source("coastlines.R")
which.points <- sample(nrow(coords.subset), n + nTest)
train.index <- which.points[1:n]
test.index <- which.points[(n+1):(n+nTest)]
X <- cbind(coords.subset$elev_meters[train.index],
coords.subset$dist.east[train.index])
Z <- inputs[train.storms, 1:2]
Y <- matrix(c(t(as.matrix(out[train.storms, train.index]))), ncol = 1)
U <- coords[train.index, 1:2]
D <- fields::rdist(U)
XTest <- cbind(coords.subset$elev_meters[test.index],
coords.subset$dist.east[test.index])
ZTest <- inputs[test.storms, 1:2]
YTest <- matrix(c(t(as.matrix(out[test.storms, test.index]))), ncol = 1)
UTest <- coords[test.index, 1:2]
DTest <- fields::rdist(UTest)
K <- 9
propSD <- list(sigf2 = 0.6,
thf = 5,
sigma2 = seq(0.1, 0.25, length = K),
tau2 = 0.4,
theta = seq(0.5, 0.8, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 6,
thf = 8,
tau2 = 0.1,
beta = c(0, 0, 0))
cat("Setup complete \n")
results <- vector("list", length = nReps)
results<- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 20, nBurn = 10, nThin=2,
model = "full_gp")
#theta
mean(train$Y)
#theta
mean(Y)
sd(Y)
results$posteriorMeans
results$acceptance
results$preds
results$preds[2,]
results$preds[2,1:25]
YTest[1:25]
pr = results$preds[2,1:25]
real = YTest[1:25]
sqrt(mean((pr-real)^2))
sd(YTest[1:25])
STest <- nrow(ZTest)
rmse <- cvg <- width <- scores <- crps <- numeric(STest)
a <- .05
for (i in 1:STest) {
truth <- YTest[(nTest*(i-1)+1):(i*nTest)]
pred <- results$preds[2, (nTest*(i-1)+1):(i*nTest)]
rmse[i] <- sqrt(mean((truth - pred)^2))
lower <- results$preds[1, (nTest*(i-1)+1):(i*nTest)]
upper <- results$preds[3, (nTest*(i-1)+1):(i*nTest)]
cvg[i] <- mean(lower < truth & upper > truth)
width[i] <- mean(upper - lower)
scores[i] <- mean((upper - lower) +
2/a * (lower - truth) * (truth < lower) +
2/a * (truth - upper) * (truth > upper))
predSamples <- t(results$predSamples[(nTest*(i-1)+1):(i*nTest), ])
crps[i] <- mean(energy_score(truth, predSamples))
}
rmse
cat(paste0("Root MS error: ", round(mean(rmse), 3), "\n"))
cvg
cat(paste0("Mean coverage: ", round(mean(cvg), 3), "\n"))
width
cat(paste0("Mean width: ", round(mean(width), 3), "\n"))
scores
cat(paste0("Mean interval score: ", round(mean(scores), 3), "\n"))
crps
cat(paste0("Mean CRPS: ", round(mean(crps), 3), "\n"))
#theta
sd(YTest)
