tau2 = 0.15,
theta = seq(0.1, 0.25, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 10,
thf = 1,
tau2 = 0.1,
beta = 2)
results <- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 100, nBurn = 100, nThin=2,
model = "full_gp")
traceback()
dim(Sigma)
dim(SigmaProp)
dim(DFull)
propTheta
propTheta <- 1:9
dim(Reduce("+", lapply(1:K, \(k) exp(-propTheta[k] * D))))
dim(B[[1]])
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Z <- train$Z
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
ZTest <- test$Z
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.05, 0.15, length = K),
tau2 = 0.15,
theta = seq(0.1, 0.25, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 10,
thf = 1,
tau2 = 0.1,
beta = 2)
results <- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 100, nBurn = 100, nThin=2,
model = "full_gp")
is.symmetric.matrix(Sigma)
isSymmetric(Sigma)
is.symmetric.matrix((Sigma + t(Sigma))/2)
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Z <- train$Z
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
ZTest <- test$Z
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.05, 0.15, length = K),
tau2 = 0.15,
theta = seq(0.1, 0.25, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 10,
thf = 1,
tau2 = 0.1,
beta = 2)
results <- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 100, nBurn = 100, nThin=2,
model = "full_gp")
traceback()
MHratio
trSigf2
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Z <- train$Z
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
ZTest <- test$Z
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.05, 0.15, length = K),
tau2 = 0.15,
theta = seq(0.1, 0.25, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 10,
thf = 1,
tau2 = 0.1,
beta = 2)
results <- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 100, nBurn = 100, nThin=2,
model = "full_gp")
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Z <- train$Z
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
ZTest <- test$Z
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.05, 0.15, length = K),
tau2 = 0.15,
theta = seq(0.1, 0.25, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 10,
thf = 1,
tau2 = 0.1,
beta = 2)
results <- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 100, nBurn = 100, nThin=2,
model = "full_gp")
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Z <- train$Z
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
ZTest <- test$Z
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.05, 0.15, length = K),
tau2 = 0.15,
theta = seq(0.1, 0.25, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 10,
thf = 1,
tau2 = 0.1,
beta = 2)
results <- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 100, nBurn = 100, nThin=2,
model = "full_gp")
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Z <- train$Z
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
ZTest <- test$Z
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.05, 0.15, length = K),
tau2 = 0.15,
theta = seq(0.1, 0.25, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 10,
thf = 1,
tau2 = 0.1,
beta = 2)
results <- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 100, nBurn = 100, nThin=2,
model = "full_gp")
logLik(SigmaProp, 3)
logPriorTheta(1:9)
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Z <- train$Z
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
ZTest <- test$Z
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.05, 0.15, length = K),
tau2 = 0.15,
theta = seq(0.1, 0.25, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 10,
thf = 1,
tau2 = 0.1,
beta = 2)
results <- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 100, nBurn = 100, nThin=2,
model = "full_gp")
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Z <- train$Z
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
ZTest <- test$Z
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.05, 0.15, length = K),
tau2 = 0.15,
theta = seq(0.1, 0.25, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 10,
thf = 1,
tau2 = 0.1,
beta = 2)
results <- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 100, nBurn = 100, nThin=2,
model = "full_gp")
MHratio
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Z <- train$Z
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
ZTest <- test$Z
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.05, 0.15, length = K),
tau2 = 0.15,
theta = seq(0.1, 0.25, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 10,
thf = 1,
tau2 = 0.1,
beta = 2)
results <- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 100, nBurn = 100, nThin=2,
model = "full_gp")
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Z <- train$Z
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
ZTest <- test$Z
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.05, 0.15, length = K),
tau2 = 0.15,
theta = seq(0.1, 0.25, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 10,
thf = 1,
tau2 = 0.1,
beta = 2)
results <- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 100, nBurn = 100, nThin=2,
model = "full_gp")
results$posteriorMeans
results$acceptance
results$posteriorMedians
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Z <- train$Z
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
ZTest <- test$Z
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.05, 0.15, length = K),
tau2 = 0.15,
theta = seq(0.1, 0.25, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 10,
thf = 1,
tau2 = 0.1,
beta = 2)
results <- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 100, nBurn = 100, nThin=2,
model = "full_gp")
theta
#theta
results$posteriorMeans
results$acceptance
nSamples <- length(results$paramSamples[[3]])
plot(1:nSamples, results$paramSamples[[3]], type="l")
results$paramSamples
plot(1:nSamples, results$paramSamples[[5]], type="l")
nSamples
nSamples <- length(results$paramSamples[[3]])
plot(1:nSamples, results$paramSamples[[3]], type="l")
plot(1:nSamples, results$paramSamples[[5]], type="l")
nSamples
nSamples <- length(results$paramSamples[[1]])
plot(1:nSamples, results$paramSamples[[1]], type="l")
nSamples <- length(results$paramSamples[[5]])
plot(1:nSamples, results$paramSamples[[5]], type="l")
#theta
results$posteriorMeans
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Z <- train$Z
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
ZTest <- test$Z
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.05, 0.15, length = K),
tau2 = 0.15,
theta = seq(0.1, 0.25, length = K))
starting <- list(sigma2 = seq(50, 100, length = K),
theta = rep(0.5, K),
sigf2 = 10,
thf = 1,
tau2 = 0.1,
beta = 2)
results <- mcmc(X = X, Z = Z, Y = Y, D = D, K = K,
starting = starting,
propSD = propSD,
nIter = 100, nBurn = 100, nThin=2,
model = "full_gp")
#theta
results$posteriorMeans
results$acceptance
nSamples <- length(results$paramSamples[[5]])
plot(1:nSamples, results$paramSamples[[5]], type="l")
