# Variogram (locations)
full_U <- as.matrix(U) %x% matrix(1, nrow = STrain, ncol = 1)
vg_loc <- variog(coords = full_U, data = Y)
vg_model <- lm(vg_loc$v ~ vg_loc$u)
plot(vg_loc, main = "Locations")
abline(a=coef(vg_model)[1], b=coef(vg_model)[2],
col = "brown1", lwd=2, lty=2)
# Variogram (global covariates)
full_Z <- as.matrix(Z) %x% matrix(1, nrow = n, ncol = 1)
vg_global <- variog(coords = full_Z, data = Y)
vg_model2 <- lm(vg_global$v ~ vg_global$u)
plot(vg_global, main = "Global Covariates")
abline(a=coef(vg_model2)[1], b=coef(vg_model2)[2],
col = "brown1", lwd=2, lty=2)
# Global covariates (Z)
STrain <- 10
STest <- 5
set.seed(123)
samp <- sample(1:nrow(inputs), STrain + STest)
stormsTrain <- samp[1:STrain]
stormsTest <- samp[(STrain+1):(STrain+STest)]
Z <- inputs[stormsTrain, c(1,5)]
ZTest <- inputs[stormsTest, c(1,5)]
# Local covariates (X)
n <- 500
nTest <- 20
samp2 <- sample(1:nrow(coords))
#train <- samp2[1:n]
#train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.1 & coords$y < 39.125)
train <- which(coords$x > -74.84 & coords$x < -74.82 & coords$y > 39.075 & coords$y < 39.1)
n <- length(train)
length(train)
#test <- samp2[(n+1):(n+nTest)]
test <- sample(train, nTest)
X <- matrix(c(rep(1, n), coords$elev_meters[train]), ncol=2)
XTest <- matrix(c(rep(1, nTest), coords$elev_meters[test]), ncol=2)
# Distance matrices (D)
U <- coords[train, 1:2]
UTest <- coords[test, 1:2]
D <- rdist(U)
DTest <- rdist(UTest)
# Response (Y)
Y <- matrix(as.matrix(out[stormsTrain, train]), ncol = 1)
YTest <- matrix(as.matrix(out[stormsTest, test]), ncol = 1)
par(mfrow=c(1,2))
# Variogram (locations)
full_U <- as.matrix(U) %x% matrix(1, nrow = STrain, ncol = 1)
vg_loc <- variog(coords = full_U, data = Y)
vg_model <- lm(vg_loc$v ~ vg_loc$u)
plot(vg_loc, main = "Locations")
abline(a=coef(vg_model)[1], b=coef(vg_model)[2],
col = "brown1", lwd=2, lty=2)
# Variogram (global covariates)
full_Z <- as.matrix(Z) %x% matrix(1, nrow = n, ncol = 1)
vg_global <- variog(coords = full_Z, data = Y)
vg_model2 <- lm(vg_global$v ~ vg_global$u)
plot(vg_global, main = "Global Covariates")
abline(a=coef(vg_model2)[1], b=coef(vg_model2)[2],
col = "brown1", lwd=2, lty=2)
Global covariates (Z)
covars <- c(1, 5)
STrain <- 10
STest <- 5
set.seed(123)
samp <- sample(1:nrow(inputs), STrain + STest)
stormsTrain <- samp[1:STrain]
stormsTest <- samp[(STrain+1):(STrain+STest)]
Z <- inputs[stormsTrain, covars]
ZTest <- inputs[stormsTest, covars]
# Local covariates (X)
n <- 500
nTest <- 20
samp2 <- sample(1:nrow(coords))
#train <- samp2[1:n]
#train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.1 & coords$y < 39.125)
train <- which(coords$x > -74.84 & coords$x < -74.82 & coords$y > 39.075 & coords$y < 39.1)
n <- length(train)
length(train)
#test <- samp2[(n+1):(n+nTest)]
test <- sample(train, nTest)
X <- matrix(c(rep(1, n), coords$elev_meters[train]), ncol=2)
XTest <- matrix(c(rep(1, nTest), coords$elev_meters[test]), ncol=2)
# Distance matrices (D)
U <- coords[train, 1:2]
UTest <- coords[test, 1:2]
D <- rdist(U)
DTest <- rdist(UTest)
# Response (Y)
Y <- matrix(as.matrix(out[stormsTrain, train]), ncol = 1)
YTest <- matrix(as.matrix(out[stormsTest, test]), ncol = 1)
par(mfrow=c(1,2))
# Variogram (locations)
full_U <- as.matrix(U) %x% matrix(1, nrow = STrain, ncol = 1)
vg_loc <- variog(coords = full_U, data = Y)
vg_model <- lm(vg_loc$v ~ vg_loc$u)
plot(vg_loc, main = "Locations")
abline(a=coef(vg_model)[1], b=coef(vg_model)[2],
col = "brown1", lwd=2, lty=2)
# Variogram (global covariates)
full_Z <- as.matrix(Z) %x% matrix(1, nrow = n, ncol = 1)
vg_global <- variog(coords = full_Z, data = Y)
vg_model2 <- lm(vg_global$v ~ vg_global$u)
plot(vg_global, main = "Global Covariates")
abline(a=coef(vg_model2)[1], b=coef(vg_model2)[2],
col = "brown1", lwd=2, lty=2)
# Global covariates (Z)
covars <- c(3, 4)
STrain <- 10
STest <- 5
set.seed(123)
samp <- sample(1:nrow(inputs), STrain + STest)
stormsTrain <- samp[1:STrain]
stormsTest <- samp[(STrain+1):(STrain+STest)]
Z <- inputs[stormsTrain, covars]
ZTest <- inputs[stormsTest, covars]
# Local covariates (X)
n <- 500
nTest <- 20
samp2 <- sample(1:nrow(coords))
#train <- samp2[1:n]
#train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.1 & coords$y < 39.125)
train <- which(coords$x > -74.84 & coords$x < -74.82 & coords$y > 39.075 & coords$y < 39.1)
n <- length(train)
length(train)
#test <- samp2[(n+1):(n+nTest)]
test <- sample(train, nTest)
X <- matrix(c(rep(1, n), coords$elev_meters[train]), ncol=2)
XTest <- matrix(c(rep(1, nTest), coords$elev_meters[test]), ncol=2)
# Distance matrices (D)
U <- coords[train, 1:2]
UTest <- coords[test, 1:2]
D <- rdist(U)
DTest <- rdist(UTest)
# Response (Y)
Y <- matrix(as.matrix(out[stormsTrain, train]), ncol = 1)
YTest <- matrix(as.matrix(out[stormsTest, test]), ncol = 1)
par(mfrow=c(1,2))
# Variogram (locations)
full_U <- as.matrix(U) %x% matrix(1, nrow = STrain, ncol = 1)
vg_loc <- variog(coords = full_U, data = Y)
vg_model <- lm(vg_loc$v ~ vg_loc$u)
plot(vg_loc, main = "Locations")
abline(a=coef(vg_model)[1], b=coef(vg_model)[2],
col = "brown1", lwd=2, lty=2)
# Variogram (global covariates)
full_Z <- as.matrix(Z) %x% matrix(1, nrow = n, ncol = 1)
vg_global <- variog(coords = full_Z, data = Y)
vg_model2 <- lm(vg_global$v ~ vg_global$u)
plot(vg_global, main = "Global Covariates")
abline(a=coef(vg_model2)[1], b=coef(vg_model2)[2],
col = "brown1", lwd=2, lty=2)
# Global covariates (Z)
covars <- c(3, 4)
STrain <- 10
STest <- 5
set.seed(1234)
samp <- sample(1:nrow(inputs), STrain + STest)
stormsTrain <- samp[1:STrain]
stormsTest <- samp[(STrain+1):(STrain+STest)]
Z <- inputs[stormsTrain, covars]
ZTest <- inputs[stormsTest, covars]
# Local covariates (X)
n <- 500
nTest <- 20
samp2 <- sample(1:nrow(coords))
#train <- samp2[1:n]
#train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.1 & coords$y < 39.125)
train <- which(coords$x > -74.84 & coords$x < -74.82 & coords$y > 39.075 & coords$y < 39.1)
n <- length(train)
length(train)
#test <- samp2[(n+1):(n+nTest)]
test <- sample(train, nTest)
X <- matrix(c(rep(1, n), coords$elev_meters[train]), ncol=2)
XTest <- matrix(c(rep(1, nTest), coords$elev_meters[test]), ncol=2)
# Distance matrices (D)
U <- coords[train, 1:2]
UTest <- coords[test, 1:2]
D <- rdist(U)
DTest <- rdist(UTest)
# Response (Y)
Y <- matrix(as.matrix(out[stormsTrain, train]), ncol = 1)
YTest <- matrix(as.matrix(out[stormsTest, test]), ncol = 1)
par(mfrow=c(1,2))
# Variogram (locations)
full_U <- as.matrix(U) %x% matrix(1, nrow = STrain, ncol = 1)
vg_loc <- variog(coords = full_U, data = Y)
vg_model <- lm(vg_loc$v ~ vg_loc$u)
plot(vg_loc, main = "Locations")
abline(a=coef(vg_model)[1], b=coef(vg_model)[2],
col = "brown1", lwd=2, lty=2)
# Variogram (global covariates)
full_Z <- as.matrix(Z) %x% matrix(1, nrow = n, ncol = 1)
vg_global <- variog(coords = full_Z, data = Y)
vg_model2 <- lm(vg_global$v ~ vg_global$u)
plot(vg_global, main = "Global Covariates")
abline(a=coef(vg_model2)[1], b=coef(vg_model2)[2],
col = "brown1", lwd=2, lty=2)
#train <- samp2[1:n]
#train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.1 & coords$y < 39.125)
train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.05 & coords$y < 39.075)
n <- length(train)
# Global covariates (Z)
covars <- c(3, 4)
STrain <- 10
STest <- 5
set.seed(1234)
samp <- sample(1:nrow(inputs), STrain + STest)
stormsTrain <- samp[1:STrain]
stormsTest <- samp[(STrain+1):(STrain+STest)]
Z <- inputs[stormsTrain, covars]
ZTest <- inputs[stormsTest, covars]
# Local covariates (X)
n <- 500
nTest <- 20
samp2 <- sample(1:nrow(coords))
#train <- samp2[1:n]
#train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.1 & coords$y < 39.125)
train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.05 & coords$y < 39.075)
n <- length(train)
length(train)
#test <- samp2[(n+1):(n+nTest)]
test <- sample(train, nTest)
X <- matrix(c(rep(1, n), coords$elev_meters[train]), ncol=2)
XTest <- matrix(c(rep(1, nTest), coords$elev_meters[test]), ncol=2)
# Distance matrices (D)
U <- coords[train, 1:2]
UTest <- coords[test, 1:2]
D <- rdist(U)
DTest <- rdist(UTest)
# Response (Y)
Y <- matrix(as.matrix(out[stormsTrain, train]), ncol = 1)
YTest <- matrix(as.matrix(out[stormsTest, test]), ncol = 1)
par(mfrow=c(1,2))
# Variogram (locations)
full_U <- as.matrix(U) %x% matrix(1, nrow = STrain, ncol = 1)
vg_loc <- variog(coords = full_U, data = Y)
vg_model <- lm(vg_loc$v ~ vg_loc$u)
plot(vg_loc, main = "Locations")
abline(a=coef(vg_model)[1], b=coef(vg_model)[2],
col = "brown1", lwd=2, lty=2)
# Variogram (global covariates)
full_Z <- as.matrix(Z) %x% matrix(1, nrow = n, ncol = 1)
vg_global <- variog(coords = full_Z, data = Y)
vg_model2 <- lm(vg_global$v ~ vg_global$u)
plot(vg_global, main = "Global Covariates")
abline(a=coef(vg_model2)[1], b=coef(vg_model2)[2],
col = "brown1", lwd=2, lty=2)
# Global covariates (Z)
covars <- c(3, 4)
STrain <- 10
STest <- 5
set.seed(1234)
samp <- sample(1:nrow(inputs), STrain + STest)
stormsTrain <- samp[1:STrain]
stormsTest <- samp[(STrain+1):(STrain+STest)]
Z <- inputs[stormsTrain, covars]
ZTest <- inputs[stormsTest, covars]
# Local covariates (X)
n <- 500
nTest <- 20
samp2 <- sample(1:nrow(coords))
#train <- samp2[1:n]
#train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.1 & coords$y < 39.125)
train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.075 & coords$y < 39.1)
n <- length(train)
length(train)
#test <- samp2[(n+1):(n+nTest)]
test <- sample(train, nTest)
X <- matrix(c(rep(1, n), coords$elev_meters[train]), ncol=2)
XTest <- matrix(c(rep(1, nTest), coords$elev_meters[test]), ncol=2)
# Distance matrices (D)
U <- coords[train, 1:2]
UTest <- coords[test, 1:2]
D <- rdist(U)
DTest <- rdist(UTest)
# Response (Y)
Y <- matrix(as.matrix(out[stormsTrain, train]), ncol = 1)
YTest <- matrix(as.matrix(out[stormsTest, test]), ncol = 1)
par(mfrow=c(1,2))
# Variogram (locations)
full_U <- as.matrix(U) %x% matrix(1, nrow = STrain, ncol = 1)
vg_loc <- variog(coords = full_U, data = Y)
vg_model <- lm(vg_loc$v ~ vg_loc$u)
plot(vg_loc, main = "Locations")
abline(a=coef(vg_model)[1], b=coef(vg_model)[2],
col = "brown1", lwd=2, lty=2)
# Variogram (global covariates)
full_Z <- as.matrix(Z) %x% matrix(1, nrow = n, ncol = 1)
vg_global <- variog(coords = full_Z, data = Y)
vg_model2 <- lm(vg_global$v ~ vg_global$u)
plot(vg_global, main = "Global Covariates")
abline(a=coef(vg_model2)[1], b=coef(vg_model2)[2],
col = "brown1", lwd=2, lty=2)
# Global covariates (Z)
covars <- c(3, 4)
STrain <- 10
STest <- 5
set.seed(1234)
samp <- sample(1:nrow(inputs), STrain + STest)
stormsTrain <- samp[1:STrain]
stormsTest <- samp[(STrain+1):(STrain+STest)]
Z <- inputs[stormsTrain, covars]
ZTest <- inputs[stormsTest, covars]
# Local covariates (X)
n <- 500
nTest <- 20
samp2 <- sample(1:nrow(coords))
#train <- samp2[1:n]
#train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.1 & coords$y < 39.125)
train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.075 & coords$y < 39.1)
n <- length(train)
length(train)
#test <- samp2[(n+1):(n+nTest)]
test <- sample(train, nTest)
X <- matrix(c(rep(1, n), coords$elev_meters[train]), ncol=2)
XTest <- matrix(c(rep(1, nTest), coords$elev_meters[test]), ncol=2)
# Distance matrices (D)
U <- coords[train, 1:2]
UTest <- coords[test, 1:2]
D <- rdist(U)
DTest <- rdist(UTest)
# Response (Y)
Y <- matrix(as.matrix(out[stormsTrain, train]), ncol = 1)
YTest <- matrix(as.matrix(out[stormsTest, test]), ncol = 1)
par(mfrow=c(1,2))
# Variogram (locations)
full_U <- as.matrix(U) %x% matrix(1, nrow = STrain, ncol = 1)
vg_loc <- variog(coords = full_U, data = Y)
vg_model <- lm(vg_loc$v ~ vg_loc$u)
plot(vg_loc, main = "Locations")
abline(a=coef(vg_model)[1], b=coef(vg_model)[2],
col = "brown1", lwd=2, lty=2)
# Variogram (global covariates)
full_Z <- as.matrix(Z) %x% matrix(1, nrow = n, ncol = 1)
vg_global <- variog(coords = full_Z, data = Y)
vg_model2 <- lm(vg_global$v ~ vg_global$u)
plot(vg_global, main = "Global Covariates")
abline(a=coef(vg_model2)[1], b=coef(vg_model2)[2],
col = "brown1", lwd=2, lty=2)
# Global covariates (Z)
covars <- c(3, 4)
STrain <- 10
STest <- 5
set.seed(123)
samp <- sample(1:nrow(inputs), STrain + STest)
stormsTrain <- samp[1:STrain]
stormsTest <- samp[(STrain+1):(STrain+STest)]
Z <- inputs[stormsTrain, covars]
ZTest <- inputs[stormsTest, covars]
# Local covariates (X)
n <- 500
nTest <- 20
samp2 <- sample(1:nrow(coords))
#train <- samp2[1:n]
#train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.1 & coords$y < 39.125)
train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.075 & coords$y < 39.1)
n <- length(train)
length(train)
#test <- samp2[(n+1):(n+nTest)]
test <- sample(train, nTest)
X <- matrix(c(rep(1, n), coords$elev_meters[train]), ncol=2)
XTest <- matrix(c(rep(1, nTest), coords$elev_meters[test]), ncol=2)
# Distance matrices (D)
U <- coords[train, 1:2]
UTest <- coords[test, 1:2]
D <- rdist(U)
DTest <- rdist(UTest)
# Response (Y)
Y <- matrix(as.matrix(out[stormsTrain, train]), ncol = 1)
YTest <- matrix(as.matrix(out[stormsTest, test]), ncol = 1)
par(mfrow=c(1,2))
# Variogram (locations)
full_U <- as.matrix(U) %x% matrix(1, nrow = STrain, ncol = 1)
vg_loc <- variog(coords = full_U, data = Y)
vg_model <- lm(vg_loc$v ~ vg_loc$u)
plot(vg_loc, main = "Locations")
abline(a=coef(vg_model)[1], b=coef(vg_model)[2],
col = "brown1", lwd=2, lty=2)
# Variogram (global covariates)
full_Z <- as.matrix(Z) %x% matrix(1, nrow = n, ncol = 1)
vg_global <- variog(coords = full_Z, data = Y)
vg_model2 <- lm(vg_global$v ~ vg_global$u)
plot(vg_global, main = "Global Covariates")
abline(a=coef(vg_model2)[1], b=coef(vg_model2)[2],
col = "brown1", lwd=2, lty=2)
setwd("~/research/global_gp")
results <- readRDS("objects/flood.RDS")
# Libraries
library(MBA)
library(fields)
# Data
load("data/flood_data.RData")
# Global covariates (Z)
STrain <- 10
STest <- 5
set.seed(123)
samp <- sample(1:nrow(inputs), STrain + STest)
stormsTrain <- samp[1:STrain]
stormsTest <- samp[(STrain+1):(STrain+STest)]
Z <- inputs[stormsTrain,3:4]
ZTest <- inputs[stormsTest,3:4]
# Local covariates (X)
n <- 500
nTest <- 20
samp2 <- sample(1:nrow(coords))
#train <- samp2[1:n]
train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.075 & coords$y < 39.1)
#test <- samp2[(n+1):(n+nTest)]
test <- sample(train, nTest)
X <- matrix(c(rep(1, n), coords$elev_meters[train]), ncol=2)
XTest <- matrix(c(rep(1, nTest), coords$elev_meters[test]), ncol=2)
# Distance matrices (D)
U <- coords[train, 1:2]
UTest <- coords[test, 1:2]
D <- rdist(U)
DTest <- rdist(UTest)
# Response (Y)
Y <- matrix(as.matrix(out[stormsTrain, train]), ncol = 1)
YTest <- matrix(as.matrix(out[stormsTest, test]), ncol = 1)
# Other
K <- 9
propSD <- list(sigma2 = seq(0.05, 0.15, length = K),
tau2 = 0.15)
#theta <- runif(9, 0.5, 3)
theta <- seq(10, 100, length = K)
lwr <- min(c(YTest[1:(2*nTest)], results$preds[2,]))
upr <- max(c(YTest[1:(2*nTest)], results$preds[2,]))
lims <- c(lwr, upr)
pred.surf <-  mba.surf(cbind(UTest, YTest[1:nTest]), no.X=100, no.Y=100, extend=T)$xyz.est
image.plot(pred.surf, xaxs ="r", yaxs = "r", zlim = lims, main="True Surface, Storm 1",
cex.main = 1.5, col = hcl.colors(12, "YlOrRd", rev=TRUE))
contour(pred.surf, add=T)
pred.surf <-  mba.surf(cbind(UTest, results$preds[2,1:nTest]), no.X=100, no.Y=100, extend=T)$xyz.est
image.plot(pred.surf, xaxs ="r", yaxs = "r", zlim = lims, main="Global GP, Storm 1",
cex.main = 1.5, col = hcl.colors(12, "YlOrRd", rev=TRUE))
contour(pred.surf, add=T)
pred.surf <-  mba.surf(cbind(UTest, YTest[(nTest+1):(2*nTest)]), no.X=100, no.Y=100, extend=T)$xyz.est
image.plot(pred.surf, xaxs ="r", yaxs = "r", zlim = lims, main="True Surface, Storm 2",
cex.main = 1.5, col = hcl.colors(12, "YlOrRd", rev=TRUE))
contour(pred.surf, add=T)
nTest
dim(YTest)
YTest
plot(coords$x, coords$y)
ind <- which(1:49719 %% 3 == 0)
length(ind)
plot(coords$x[ind], coords$y[ind])
ind <- which(1:49719 %% 10 == 0)
plot(coords$x[ind], coords$y[ind])
ind <- which(1:49719 %% 50 == 0)
plot(coords$x[ind], coords$y[ind])
abline(v = c(-74.87, -74.85), h = c(39.15, 39.175))
plot(coords$x[ind], coords$y[ind])
abline(v = c(-74.89, -74.85), h = c(39.15, 39.175))
plot(coords$x[ind], coords$y[ind])
abline(v = c(-74.87, -74.83), h = c(39.15, 39.175))
abline(v = c(-74.87, -74.81), h = c(39.15, 39.18))
plot(coords$x[ind], coords$y[ind])
abline(v = c(-74.87, -74.81), h = c(39.15, 39.18))
plot(coords$x[ind], coords$y[ind])
abline(v = c(-74.86, -74.81), h = c(39.13, 39.18))
train <- which(coords$x > -74.86 & coords$x < -74.81 & coords$y > 39.13 & coords$y < 39.18)
length(train)
summary(Y[train,])
class(Y)
dim(Y)
dim(out)
summary(out[1,train])
summary(c(out[1,train]))
dim(out[1,train])
class(c(out[1, 1:10]))
c(out[1,1:10])
out[1,1:10]
as.vector(out[1,1:10])
class(out)
as.matrix(out[1,1:10])
class(as.matrix(out[1,1:10]))
c(as.matrix(out[1,1:10]))
summary(c(as.matrix(out[1,train])))
out <- as.matrix(out)
summary(c(out[2,train]))
summary(c(out[3,train]))
summary(c(out[4,train]))
#train <- samp2[1:n]
train <- which(coords$x > -74.85 & coords$x < -74.83 & coords$y > 39.075 & coords$y < 39.1)
summary(c(out[2,train]))
summary(c(out[1,train]))
summary(c(out[3,train]))
train <- which(coords$x > -74.86 & coords$x < -74.81 & coords$y > 39.15 & coords$y < 39.18)
length(train)
summary(c(out[1,train]))
summary(c(out[2,train]))
summary(c(out[3,train]))
train <- which(coords$x > -74.86 & coords$x < -74.83 & coords$y > 39.15 & coords$y < 39.18)
length(train)
summary(c(out[1,train]))
summary(c(out[2,train]))
summary(c(out[3,train]))
train <- which(coords$x > -74.87 & coords$x < -74.81 & coords$y > 39.15 & coords$y < 39.18)
length(train)
train <- which(coords$x > -74.86 & coords$x < -74.81 & coords$y > 39.14 & coords$y < 39.18)
length(train)
train <- which(coords$x > -74.86 & coords$x < -74.81 & coords$y > 39.15 & coords$y < 39.18)
length(train)
train <- which(coords$x > -74.86 & coords$x < -74.82 & coords$y > 39.15 & coords$y < 39.18)
length(train)
train <- which(coords$x > -74.87 & coords$x < -74.83 & coords$y > 39.15 & coords$y < 39.18)
length(train)
#samp2 <- sample(1:nrow(coords))
#train <- samp2[1:n]
train <- which(coords$x > -74.87 & coords$x < -74.83 & coords$y > 39.15 & coords$y < 39.18)
length(train)
