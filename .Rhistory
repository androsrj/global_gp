data = full.data,
listw = lw,
zero.policy = TRUE,
method = "eigen"
)
gc()
library(tidyverse)
library(sf)
library(tigris)
library(readxl)
library(tidycensus)
library(spatialreg)
library(spdep)
#census_api_key("871e8a84d3e1c6dd10de422422caaa42e2a23c08", install = TRUE)
options(tigris_use_cache = TRUE)
# Read in data from Harvard/MIT election lab
df <- read.csv("county_2016.csv")
# Filter out alaska, hawaii, and other odd entries
df <-  df %>%
filter(!is.na(county_fips) & state != "ALASKA" & state != "HAWAII")
# Convert fips to character and add a leading zero, if necessary
df$county_fips <- as.character(df$county_fips)
for (i in 1:nrow(df)) {
if (nchar(df$county_fips[i]) == 4) {
df$county_fips[i] <- paste0("0", df$county_fips[i])
}
}
# Clean up and remove unnecessary columns
df <- df %>%
select(state, state_po, county_name, county_fips,
candidate, candidatevotes, totalvotes)
# Convert from long to wide format, rename columns accordingly
df.wide <- df %>%
pivot_wider(
names_from = candidate,
values_from = candidatevotes
)
colnames(df.wide) <- c("state", "abbr", "county", "fips", "total", "trump", "clinton", "other")
# Other misc cleanup
# Virginia has one duplicate county (Bedford)
# Missouri has KC and Jackson split up
df.wide <- df.wide[-2799, ] # Remove virginia duplicate
df.wide[1497, 5:8] <- df.wide[1497, 5:8] + df.wide[1501, 5:8] # Combine KC and Jackson county
df.wide <- df.wide[-1501, ] # Remove KC
# Create columns for candidate percentage and vote margin
votes <- df.wide %>%
mutate(pct.trump = trump / total,
pct.clinton = clinton / total) %>%
mutate(vote.margin = 100 * (pct.trump - pct.clinton))
# Get the shapefile for all counties in the US
counties.sf <- counties(cb = TRUE, resolution = "5m", year = 2016) %>%
filter(!STATEFP %in% c("02", "15", "72")) %>%
filter(STATEFP <= 56) %>%
arrange(STATEFP, COUNTYFP) %>%
mutate(FIP = paste0(STATEFP, COUNTYFP)) %>%
st_transform(5070) %>%
mutate(area = as.numeric(st_area(geometry)) / 1e6)
# Join harvard/MIT voting data with sf file
counties <- tibble(
GEOID = counties.sf$GEOID,
State = votes$state,
Vote.Margin = votes$pct.trump,
total.votes = votes$total,
area = counties.sf$area
) %>%
mutate(log.voter.density = logb(total.votes / area, 10))
# Rejoin to sf object to keep sf class
full.data <- left_join(counties.sf, counties, by = "GEOID") %>%
select(GEOID, State, Vote.Margin, log.voter.density)
full.data$State <- as.factor(full.data$State)
# Spatial weights matrix
nb1 <- poly2nb(full.data)
nb_lags <- nblag(nb1, maxlag = 3)
nb3 <- nb1  # start with first-order
for (i in 2:3) {
nb3 <- spdep:::union.nb(nb3, nb_lags[[i]])
}
lw <- nb2listw(nb3, style = "W", zero.policy = TRUE)
# Fit model
model <- errorsarlm(
Vote.Margin ~ poly(log.voter.density, 3) + State,
data = full.data,
listw = lw,
zero.policy = TRUE,
method = "eigen"
)
summary(model)
?nblag_cumulative
# Spatial weights matrix
nb1 <- poly2nb(full.data)
nb_lags <- nblag(nb1, maxlag = 3)
nb3 <- nblag_cumul(nb_lags)
lw <- nb2listw(nb3, style = "W", zero.policy = TRUE)
# Fit model
model <- errorsarlm(
Vote.Margin ~ poly(log.voter.density, 3) + State,
data = full.data,
listw = lw,
zero.policy = TRUE,
method = "eigen"
)
summary(model)
moran <- localmoran(model$residuals, lw, zero.policy = TRUE)
moran
str(moran)
class(moran)
dim(moran)
?localmoran
head(moran)
hist(moran[,1])
hist(moran[,5])
sum(moran[,5] < .05)
sum(moran[,5])
moran[,5]
sum(is.na(moran[,5]))
sum(moran[,5] < .05, na.rm=TRUE)
mean(moran[,5] < .05, na.rm=TRUE)
which.max[moran[,1]]
max[moran[,1]]
which.max(moran[,1])
votes[2613,]
order(moran[,1])
order(moran[,1], decreasing = TRUE)[1:5]
votes[order(moran[,1], decreasing = TRUE)[1:5], ]
plot.data <- full.data
View(full.data)
plot.data <- full.data
plot.data$local.moran <- moran[,1]
# Plot for vote margin
ggplot(plot.data) +
geom_sf(aes(fill = Vote.Margin), color = NA) +  # `color = NA` removes county borders for cleaner look
geom_sf(data = states.sf, fill = NA, color = "black", size = 0.3) +
scale_fill_viridis_c(option = "plasma") +  # Change color scheme as needed
theme_void() +
labs(title = "Vote Margin 2024",
fill = "Vote Margin")
# Plot for vote margin
ggplot(plot.data) +
geom_sf(aes(fill = Vote.Margin), color = NA) +  # `color = NA` removes county borders for cleaner look
#geom_sf(data = states.sf, fill = NA, color = "black", size = 0.3) +
scale_fill_viridis_c(option = "plasma") +  # Change color scheme as needed
theme_void() +
labs(title = "Vote Margin 2024",
fill = "Vote Margin")
# Plot for vote margin
ggplot(plot.data) +
geom_sf(aes(fill = local.moran), color = NA) +  # `color = NA` removes county borders for cleaner look
#geom_sf(data = states.sf, fill = NA, color = "black", size = 0.3) +
scale_fill_viridis_c(option = "plasma") +  # Change color scheme as needed
theme_void() +
labs(title = "Vote Margin 2024",
fill = "Vote Margin")
geary <- localC(model$residuals, lw, zero.policy = TRUE)
plot.data <- full.data
plot.data$local.moran <- moran[,1]
plot.data$local.geary <- geary[,1]
head(geary)
dim(geary)
class(geary)
str(geary)
plot.data$local.geary <- geary
# Plot for vote margin
ggplot(plot.data) +
geom_sf(aes(fill = local.moran), color = NA) +  # `color = NA` removes county borders for cleaner look
#geom_sf(data = states.sf, fill = NA, color = "black", size = 0.3) +
scale_fill_viridis_c(option = "plasma") +  # Change color scheme as needed
theme_void() +
labs(title = "Local Moran's I",
fill = "Moran's I")
# Plot for local Geary's C
ggplot(plot.data) +
geom_sf(aes(fill = local.geary), color = NA) +
#geom_sf(data = states.sf, fill = NA, color = "black", size = 0.3) +
scale_fill_viridis_c(option = "plasma") +
theme_void() +
labs(title = "Local Geary's C",
fill = "Geary's C")
geary
?localC
geary <- localC_perm(model$residuals, lw, zero.policy = TRUE)
dim(geary)
str(geary)
length(geary)
geary <- localC_perm(model$residuals, lw, zero.policy = TRUE)
dim(geary)
length(geary)
str(geary)
pseudo_p(geary)
attr(geary, "pseudo-p")
dim(attr(geary, "pseudo-p"))
head(attr(geary, "pseudo-p"))
setwd("~/research/global_gp")
library(ggplot2)
library(MBA)
library(fields)
library(latex2exp)
nScen <- 10
nReps <- 10
line.type <- 2
line.width <- 4
nTest <- 25
# Surface plots for true beta surfaces
test <- readRDS(paste0("data/small/scen", 11, "/test.RDS"))
test$B
dim(test$B)
beta0.true <- test$B[ , 1]
beta1.true <- test$B[ , 2]
beta2.true <- test$B[ , 3]
# Beta0
mba.data.true <- data.frame(test$U, beta0.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_0$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
# Beta1
mba.data.true <- data.frame(test$U, beta1.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_1$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
# Beta2
mba.data.true <- data.frame(test$U, beta2.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_2$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
# Plot beta estimated surfaces for scen 11
path <- paste0("objects/small_scen", i, ".RDS")
results <- readRDS(path)[[1]]
test <- readRDS(paste0("data/small/scen", i, "/test.RDS"))
# Plot beta estimated surfaces for scen 11
path <- paste0("objects/small_scen", 11, ".RDS")
results <- readRDS(path)[[1]]
test <- readRDS(paste0("data/small/scen", 11, "/test.RDS"))
# Beta0
beta0.means <- results$posteriorMeans$beta.test[1:nTest]
mba.data <- data.frame(test$U, beta0.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image(mba.interp$xyz.est, main = paste0("Scen. ", i),
col = tim.colors(64), cex.main = 1.5)
mtext(TeX("$\\beta_0"), side = 3, line = 1, outer = TRUE, cex = 1.5)
# Beta0
beta0.means <- results$posteriorMeans$beta.test[1:nTest]
mba.data <- data.frame(test$U, beta0.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image(mba.interp$xyz.est, main = "Scen. 11",
col = tim.colors(64), cex.main = 1.5)
mtext(TeX("$\\beta_0"), side = 3, line = 1, outer = TRUE, cex = 1.5)
mtext(TeX("$\\beta_0"), side = 3, line = -1, outer = TRUE, cex = 1.5)
image(mba.interp$xyz.est, main = TeX("$\\beta_0"),
col = tim.colors(64), cex.main = 1.5)
# Scenario 11
# Surface plots for true beta surfaces
test <- readRDS(paste0("data/small/scen", 11, "/test.RDS"))
beta0.true <- test$B[ , 1]
beta1.true <- test$B[ , 2]
beta2.true <- test$B[ , 3]
pdf("figures/gp/beta_true_11.pdf", width = 10, height = 3)
par(mfrow = c(1,3), mar = c(5, 5, 4, 8) + 0.2)
# Beta0
mba.data.true <- data.frame(test$U, beta0.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_0$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
# Beta1
mba.data.true <- data.frame(test$U, beta1.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_1$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
# Beta2
mba.data.true <- data.frame(test$U, beta2.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_2$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
dev.off()
# Plot beta estimated surfaces for scen 11
path <- paste0("objects/small_scen", 11, ".RDS")
results <- readRDS(path)[[1]]
test <- readRDS(paste0("data/small/scen", 11, "/test.RDS"))
pdf("figures/gp/beta_scen11.pdf")
par(mfrow = c(1, 3))
# Beta0
beta0.means <- results$posteriorMeans$beta.test[1:nTest]
mba.data <- data.frame(test$U, beta0.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image(mba.interp$xyz.est, main = TeX("$\\beta_0"),
col = tim.colors(64), cex.main = 1.5)
# Beta1
beta1.means <- results$posteriorMeans$beta.test[(nTest+1):(2*nTest)]
mba.data <- data.frame(test$U, beta1.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image(mba.interp$xyz.est, main = TeX("$\\beta_1"),
col = tim.colors(64), cex.main = 1.5)
# Beta2
beta2.means <- results$posteriorMeans$beta.test[(2*nTest+1):(3*nTest)]
mba.data <- data.frame(test$U, beta2.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image(mba.interp$xyz.est, main = TeX("$\\beta_2"),
col = tim.colors(64), cex.main = 1.5)
dev.off()
pdf("figures/gp/beta_scen11.pdf", width = 10, height = 3)
par(mfrow = c(1, 3))
# Beta0
beta0.means <- results$posteriorMeans$beta.test[1:nTest]
mba.data <- data.frame(test$U, beta0.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image(mba.interp$xyz.est, main = TeX("$\\beta_0"),
col = tim.colors(64), cex.main = 1.5)
# Beta1
beta1.means <- results$posteriorMeans$beta.test[(nTest+1):(2*nTest)]
mba.data <- data.frame(test$U, beta1.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image(mba.interp$xyz.est, main = TeX("$\\beta_1"),
col = tim.colors(64), cex.main = 1.5)
# Beta2
beta2.means <- results$posteriorMeans$beta.test[(2*nTest+1):(3*nTest)]
mba.data <- data.frame(test$U, beta2.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image(mba.interp$xyz.est, main = TeX("$\\beta_2"),
col = tim.colors(64), cex.main = 1.5)
dev.off()
pdf("figures/gp/beta_true_11.pdf", width = 10, height = 3)
par(mfrow = c(1,3), mar = c(5, 5, 4, 8) + 0.2)
# Beta0
mba.data.true <- data.frame(test$U, beta0.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_0$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
# Beta1
mba.data.true <- data.frame(test$U, beta1.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_1$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
# Beta2
mba.data.true <- data.frame(test$U, beta2.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_2$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
dev.off()
# Plot beta esti
image.plot(mba.interp$xyz.est, main = TeX("$\\beta_0"),
col = tim.colors(64), cex.main = 1.5)
# Scenario 11
# Surface plots for true beta surfaces
test <- readRDS(paste0("data/small/scen", 11, "/test.RDS"))
beta0.true <- test$B[ , 1]
beta1.true <- test$B[ , 2]
beta2.true <- test$B[ , 3]
pdf("figures/gp/beta_true_11.pdf", width = 10, height = 3)
par(mfrow = c(1,3), mar = c(5, 5, 4, 8) + 0.2)
# Beta0
mba.data.true <- data.frame(test$U, beta0.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_0$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
# Beta1
mba.data.true <- data.frame(test$U, beta1.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_1$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
# Beta2
mba.data.true <- data.frame(test$U, beta2.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_2$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
dev.off()
# Plot beta estimated surfaces for scen 11
path <- paste0("objects/small_scen", 11, ".RDS")
results <- readRDS(path)[[1]]
test <- readRDS(paste0("data/small/scen", 11, "/test.RDS"))
pdf("figures/gp/beta_scen11.pdf", width = 10, height = 3)
par(mfrow = c(1, 3))
# Beta0
beta0.means <- results$posteriorMeans$beta.test[1:nTest]
mba.data <- data.frame(test$U, beta0.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp$xyz.est, main = TeX("$\\beta_0"),
col = tim.colors(64), cex.main = 1.5)
# Beta1
beta1.means <- results$posteriorMeans$beta.test[(nTest+1):(2*nTest)]
mba.data <- data.frame(test$U, beta1.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp$xyz.est, main = TeX("$\\beta_1"),
col = tim.colors(64), cex.main = 1.5)
# Beta2
beta2.means <- results$posteriorMeans$beta.test[(2*nTest+1):(3*nTest)]
mba.data <- data.frame(test$U, beta2.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp$xyz.est, main = TeX("$\\beta_2"),
col = tim.colors(64), cex.main = 1.5)
dev.off()
# Surface plots for true beta surfaces
test <- readRDS(paste0("data/small/scen", 11, "/test.RDS"))
beta0.true <- test$B[ , 1]
beta1.true <- test$B[ , 2]
beta2.true <- test$B[ , 3]
pdf("figures/gp/beta_true_11.pdf", width = 10, height = 3)
par(mfrow = c(1,3), mar = c(5, 5, 4, 8) + 0.2)
# Beta0
mba.data.true <- data.frame(test$U, beta0.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_0$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
# Beta1
mba.data.true <- data.frame(test$U, beta1.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_1$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
# Beta2
mba.data.true <- data.frame(test$U, beta2.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_2$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
dev.off()
# Plot beta estimated surfaces for scen 11
path <- paste0("objects/small_scen", 11, ".RDS")
results <- readRDS(path)[[1]]
test <- readRDS(paste0("data/small/scen", 11, "/test.RDS"))
pdf("figures/gp/beta_scen11.pdf", width = 10, height = 3)
par(mfrow = c(1,3), mar = c(5, 5, 4, 8) + 0.2)
# Beta0
beta0.means <- results$posteriorMeans$beta.test[1:nTest]
mba.data <- data.frame(test$U, beta0.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp$xyz.est, main = TeX("$\\beta_0"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
col = tim.colors(64), cex.main = 1.5)
# Beta1
beta1.means <- results$posteriorMeans$beta.test[(nTest+1):(2*nTest)]
mba.data <- data.frame(test$U, beta1.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp$xyz.est, main = TeX("$\\beta_1"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
col = tim.colors(64), cex.main = 1.5)
# Beta2
beta2.means <- results$posteriorMeans$beta.test[(2*nTest+1):(3*nTest)]
mba.data <- data.frame(test$U, beta2.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp$xyz.est, main = TeX("$\\beta_2"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
col = tim.colors(64), cex.main = 1.5)
dev.off()
image.plot(mba.interp$xyz.est, main = TeX("Estimated Surface $\\beta_0"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
col = tim.colors(64), cex.main = 1.5)
# Scenario 11
# Surface plots for true beta surfaces
test <- readRDS(paste0("data/small/scen", 11, "/test.RDS"))
beta0.true <- test$B[ , 1]
beta1.true <- test$B[ , 2]
beta2.true <- test$B[ , 3]
pdf("figures/gp/beta_true_11.pdf", width = 10, height = 3)
par(mfrow = c(1,3), mar = c(5, 5, 4, 8) + 0.2)
# Beta0
mba.data.true <- data.frame(test$U, beta0.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_0$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
# Beta1
mba.data.true <- data.frame(test$U, beta1.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_1$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
# Beta2
mba.data.true <- data.frame(test$U, beta2.true)
mba.interp.true <- mba.surf(mba.data.true, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp.true$xyz.est, main = TeX("True surface ($\\beta_2$)"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
axis.args = list(cex.axis = 1.5))
dev.off()
# Plot beta estimated surfaces for scen 11
path <- paste0("objects/small_scen", 11, ".RDS")
results <- readRDS(path)[[1]]
test <- readRDS(paste0("data/small/scen", 11, "/test.RDS"))
pdf("figures/gp/beta_scen11.pdf", width = 10, height = 3)
par(mfrow = c(1,3), mar = c(5, 5, 4, 8) + 0.2)
# Beta0
beta0.means <- results$posteriorMeans$beta.test[1:nTest]
mba.data <- data.frame(test$U, beta0.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp$xyz.est, main = TeX("Estimated Surface $\\beta_0"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
col = tim.colors(64), cex.main = 1.5)
# Beta1
beta1.means <- results$posteriorMeans$beta.test[(nTest+1):(2*nTest)]
mba.data <- data.frame(test$U, beta1.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp$xyz.est, main = TeX("Estimated Surface $\\beta_1"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
col = tim.colors(64), cex.main = 1.5)
# Beta2
beta2.means <- results$posteriorMeans$beta.test[(2*nTest+1):(3*nTest)]
mba.data <- data.frame(test$U, beta2.means)
mba.interp <- mba.surf(mba.data, no.X=100, no.Y=100, extend=TRUE)
image.plot(mba.interp$xyz.est, main = TeX("Estimated Surface $\\beta_2"),
cex.main = 1.5, cex.lab = 1.5, cex.axis = 1.5,
col = tim.colors(64), cex.main = 1.5)
dev.off()
