conditionalProb("ga", TRUE, "Harris"),
conditionalProb("mi", TRUE, "Harris"),
conditionalProb("nc", TRUE, "Harris"),
conditionalProb("nv", TRUE, "Harris"),
conditionalProb("pa", TRUE, "Harris"),
conditionalProb("wi", TRUE, "Harris"))
L_trump <- c(conditionalProb("az", FALSE, "Trump"),
conditionalProb("ga", FALSE, "Trump"),
conditionalProb("mi", FALSE, "Trump"),
conditionalProb("nc", FALSE, "Trump"),
conditionalProb("nv", FALSE, "Trump"),
conditionalProb("pa", FALSE, "Trump"),
conditionalProb("wi", FALSE, "Trump"))
U_trump <- c(conditionalProb("az", TRUE, "Trump"),
conditionalProb("ga", TRUE, "Trump"),
conditionalProb("mi", TRUE, "Trump"),
conditionalProb("nc", TRUE, "Trump"),
conditionalProb("nv", TRUE, "Trump"),
conditionalProb("pa", TRUE, "Trump"),
conditionalProb("wi", TRUE, "Trump"))
# WPA plots
x <- seq(2, 20, by = 3)
y_harris <- rep(p_win_harris, 7)
plotCI(x, y_harris, ui = U_harris, li = L_harris,
xlim = c(1,22), ylim = c(0.15, 0.85),
col = "blue", xaxt = 'n', lwd =2 ,
xlab = "", ylab = "Win Probability")
#abline(h = 0.5, lty = 2)
abline(h = p_win_harris, lty = 2, col = "blue")
abline(h = p_win_trump, lty = 2, col = "brown3")
x <- seq(3, 21, by = 3)
y_trump <- rep(p_win_trump, 7)
plotCI(x, y_trump, ui = U_trump, li = L_trump,
add = T, xaxt = 'n', lwd = 2,
col = "brown3", xlab = "", ylab = "")
axis(1, at = seq(2.5, 20.5, by = 3),
labels = c("AZ", "GA", "MI", "NC", "NV", "PA", "WI"))
legend("topright", legend=c("Harris", "Trump"), fill = c("blue", "brown3"))
wpd <- U_harris - L_harris
names(wpd) <- c("AZ", "GA", "MI", "NC", "NV", "PA", "WI")
barplot(sort(wpd, dec=TRUE),
xlab = "State", ylab = "Win Probability Difference (WPD)",
yaxt = 'n',
main = "Swing State Importance Ordered by WPD",
col = rev(brewer.pal(7, "Greens")))
axis(2, at = seq(0, 0.6, by=0.1), labels = paste0(seq(0, 60, by=10), "%"), las=2)
## Condition on two states at once
# Harris
state_duos <- t(combn(states, 2))
harris_duo_probs <- sapply(1:nrow(state_duos), function(x) {
conditionalProbMulti(states = state_duos[x, ], win = TRUE, candidate = "Harris")
})
duo_harris <- data.frame(state1 = state_duos[,1],
state2 = state_duos[,2],
win_prob_harris = harris_duo_probs) %>%
arrange(-win_prob_harris)
duo_harris
barplot(duo_harris$win_prob_harris,
xlab = "States", ylab = "Conditional Win Probability",
ylim = c(0, 1),
yaxt = 'n',
main = "Harris Win Probability Conditioned on Two States at Once",
col = terrain.colors(21))
axis(2, at = seq(0, 1, by=0.2), labels = paste0(seq(0, 100, by=20), "%"), las = 2)
axis(1, at = seq(0.8, 24.75, length=21), labels = paste0(duo_harris$state1, ", ",
duo_harris$state2), las = 2)
# Trump
trump_duo_probs <- sapply(1:nrow(state_duos), function(x) {
conditionalProbMulti(states = state_duos[x, ], win = TRUE, candidate = "Trump")
})
duo_trump <- data.frame(state1 = state_duos[,1],
state2 = state_duos[,2],
win_prob_trump = trump_duo_probs) %>%
arrange(-win_prob_trump)
duo_trump
barplot(duo_trump$win_prob_trump,
xlab = "States", ylab = "Conditional Win Probability",
ylim = c(0, 1),
yaxt = 'n',
main = "Trump Win Probability Conditioned on Two States at Once",
col = terrain.colors(21))
axis(2, at = seq(0, 1, by=0.2), labels = paste0(seq(0, 100, by=20), "%"), las = 2)
axis(1, at = seq(0.8, 24.75, length=21), labels = paste0(duo_trump$state1, ", ",
duo_trump$state2), las = 2)
n <- 30
n0 <- 20
k <- n / (2*n0 - n)
n2 <- k * n0
diff <- function(k, n, n0, s1, s2) {
n2 <- k * n0
se_equal <- sqrt(s1^2 / n + s2^2 / n)
se_unequal <- sqrt(s1^2 / n0 + s2^2 / n2)
return(c(SE_Equal = se_equal,
SE_Unequal = se_unequal,
Difference = se_equal - se_unequal))
}
s1 <- 3
s2 <- 4
diff(k = 1, n, n0, s1, s2)
diff(k = 2, n, n0, s1, s2)
diff(k = 3, n, n0, s1, s2)
diff(k = 4, n, n0, s1, s2)
diff(k = 5, n, n0, s1, s2)
diff(k = 1/2, n, n0, s1, s2)
diff(k = 20, n, n0, s1, s2)
diff <- function(k, n, n0, s1, s2) {
n2 <- k * n0
se_equal <- sqrt(s1^2 / n + s2^2 / n)
se_unequal <- sqrt(s1^2 / n0 + s2^2 / n2)
return(c(SE_Equal = se_equal,
SE_Unequal = se_unequal,
Difference = se_equal - se_unequal,
Ratio = se_unequal / se_equal))
}
s1 <- 3
s2 <- 4
diff(k = 1/2, n, n0, s1, s2)
diff(k = 1, n, n0, s1, s2)
diff(k = 2, n, n0, s1, s2)
diff(k = 3, n, n0, s1, s2)
diff(k = 4, n, n0, s1, s2)
diff(k = 5, n, n0, s1, s2)
diff(k = 20, n, n0, s1, s2)
diff(k = 1000, n, n0, s1, s2)
diff(k = 100000, n, n0, s1, s2)
s1 <- 4
s2 <- 4
diff(k = 1/2, n, n0, s1, s2)
diff(k = 1, n, n0, s1, s2)
diff(k = 2, n, n0, s1, s2)
diff(k = 3, n, n0, s1, s2)
diff(k = 4, n, n0, s1, s2)
diff(k = 5, n, n0, s1, s2)
diff(k = 20, n, n0, s1, s2)
diff(k = 100000, n, n0, s1, s2)
diff(k = 100000, n, n0, s1, s2)
s1 <- 3
s2 <- 4
diff(k = 1/2, n, n0, s1, s2)
diff(k = 1, n, n0, s1, s2)
diff(k = 2, n, n0, s1, s2)
diff(k = 3, n, n0, s1, s2)
diff(k = 4, n, n0, s1, s2)
diff(k = 5, n, n0, s1, s2)
diff(k = 20, n, n0, s1, s2)
diff(k = 100000, n, n0, s1, s2)
ratios <- sapply(k_vals, diff, n, n0, s1, s2)
k_vals <- c(seq(0.5, 10, by = 0.5), 20, 50, 100)
ratios <- sapply(k_vals, diff, n, n0, s1, s2)
plot(k_vals, ratios)
ratios
plot(k_vals, ratios["Ratio",])
k_vals <- c(seq(1, 10, by = 0.5), 20, 50, 100)
ratios <- sapply(k_vals, diff, n, n0, s1, s2)
plot(k_vals, ratios["Ratio",])
k_vals <- c(seq(1, 10, by = 0.5), 20, 30, 40, 50, 60, 70, 80, 90, 100)
ratios <- sapply(k_vals, diff, n, n0, s1, s2)
plot(k_vals, ratios["Ratio",])
table(iris$Species)
head(iris)
table(iris$Species)
?t.test
versicolor <- iris[iris$Species == "versicolor", ]
t.test(setosa$Sepal.Length, versicolor$Sepal.Length)
# Example with Iris data
setosa <- iris[iris$Species == "setosa", ]
versicolor <- iris[iris$Species == "versicolor", ]
t.test(setosa$Sepal.Length, versicolor$Sepal.Length)
t.test(setosa$Sepal.Width, versicolor$Sepal.Width)
aggregate(data = iris, Sepal.Width ~ Species, mean)
aggregate(data = iris, Sepal.Length ~ Species, mean)
virginica <- iris[iris$Species == "virginica", ]
t.test(setosa$Sepal.Width, virginica$Sepal.Width)
t.test(setosa$Sepal.Width[1:10], virginica$Sepal.Width)
aggregate(data = iris, Petal.Width ~ Species, mean)
aggregate(data = iris, Petal.Length ~ Species, mean)
t.test(setosa$Sepal.Width[1:10], virginica$Sepal.Width[1:10])
t.test(setosa$Sepal.Width[1:6], virginica$Sepal.Width[1:6])
data()
head(Orange)
table(Orange$Tree)
aggregate(data = Orange, age ~ Tree, mean)
aggregate(data = Orange, circumference ~ as.factor(Tree), mean)
aggregate(data = Orange, age ~ as.factor(Tree), mean)
t.test(Orange$circumference[Orange$Tree == 1], Orange$circumference[Orange$Tree == 1])
t.test(Orange$circumference[Orange$Tree == 1], Orange$circumference[Orange$Tree == 2])
head(Orange)
head(ChickWeight)
head(VADeaths)
head(chickwts)
chickwts
table(chickwts$feed)
aggregate(data=chickwts, weight ~ feed, mean)
t.test(chickwts$weight[chickwts$feed == "casein"], chickwts$weight[chickwts$feed == "sunflower"])
# Example with chick weight data
head(chickwts)
table(chickwts$feed)
# Example with chick weight data
head(chickwts)
table(chickwts$feed)
casein <- chickwts$weight[chickwts$feed == "casein"]
sunflower <- chickwts$weight[chickwts$feed == "sunflower"]
t.test(casein, sunflower)
casein_oversampled <- sample(casein, 40, replace = TRUE)
t.test(casein_oversampled, sunflower)
table(chickwts$feed)
soybean <- chickwts$weight[chickwts$feed == "soybean"]
t.test(soybean, sunflower)
casein_oversampled <- sample(casein, 100, replace = TRUE)
t.test(casein_oversampled, sunflower)
# Example with chick weight data
head(chickwts)
table(chickwts$feed)
casein <- chickwts$weight[chickwts$feed == "casein"]
soybean <- chickwts$weight[chickwts$feed == "soybean"]
sunflower <- chickwts$weight[chickwts$feed == "sunflower"]
t.test(casein, sunflower)
casein_oversampled <- sample(casein, 100, replace = TRUE)
t.test(casein_oversampled, sunflower)
casein_oversampled <- sample(casein, 1000, replace = TRUE)
t.test(casein_oversampled, sunflower)
casein_oversampled <- sample(casein, 20, replace = TRUE)
t.test(casein_oversampled, sunflower)
casein_oversampled <- sample(casein, 15, replace = TRUE)
t.test(casein_oversampled, sunflower)
casein_oversampled <- sample(casein, 15, replace = TRUE)
t.test(casein_oversampled, sunflower)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(123)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(1234)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(14)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(124)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(24)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(2654)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(254)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(2154)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(21549)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(219)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(2219)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(21219)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(213)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(2131)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(21301)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(2151)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(151)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(1512)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(1519)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(1509)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(15779)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(1579)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(15889)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(155389)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(154389)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(109389)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(1389)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(19)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(1921)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(1920)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(192009)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(109)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(1042)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(101242)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(107842)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(106542)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(100942)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(142)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(14313)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(14373)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(14383)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(14393)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(14353)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(14363)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(143543)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(12143)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
head(chickwts)
table(chickwts$feed)
casein <- chickwts$weight[chickwts$feed == "casein"]
soybean <- chickwts$weight[chickwts$feed == "soybean"]
sunflower <- chickwts$weight[chickwts$feed == "sunflower"]
t.test(casein, sunflower)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
set.seed(12143)
casein_oversampled <- sample(casein, 25, replace = TRUE)
t.test(casein_oversampled, sunflower)
tt = t.test(casein_oversampled, sunflower, )
summary(tt)
tt$stderr
tt_balanced <- t.test(casein, sunflower)
tt_balanced <- t.test(casein, sunflower)
tt_balanced
tt_balanced$stderr
tt_imbalanced <- t.test(casein_oversampled, sunflower)
tt_imbalanced
tt_imbalanced$stderr
casein_oversampled <- sample(casein, 25, replace = TRUE)
tt_imbalanced <- t.test(casein_oversampled, sunflower)
tt_imbalanced
tt_imbalanced$stderr
tt_balanced$stderr
18.93/23.34
n <- 30
n0 <- 20
k <- n / (2*n0 - n)
n2 <- k * n0
diff <- function(k, n, n0, s1, s2) {
n2 <- k * n0
se_equal <- sqrt(s1^2 / n + s2^2 / n)
se_unequal <- sqrt(s1^2 / n0 + s2^2 / n2)
return(c(SE_Equal = se_equal,
SE_Unequal = se_unequal,
Difference = se_equal - se_unequal,
Ratio = se_unequal / se_equal))
}
s1 <- 3
s2 <- 4
k_vals <- c(seq(1, 10, by = 0.5), 20, 30, 40, 50, 60, 70, 80, 90, 100)
ratios <- sapply(k_vals, diff, n, n0, s1, s2)
plot(k_vals, ratios["Ratio",])
# Example with chick weight data
head(chickwts)
table(chickwts$feed)
casein <- chickwts$weight[chickwts$feed == "casein"]
soybean <- chickwts$weight[chickwts$feed == "soybean"]
sunflower <- chickwts$weight[chickwts$feed == "sunflower"]
tt_balanced <- t.test(casein, sunflower)
tt_balanced
tt_balanced$stderr
# K = 2
set.seed(12143)
casein_oversampled <- sample(casein, 25, replace = TRUE)
tt_imbalanced <- t.test(casein_oversampled, sunflower)
tt_imbalanced
tt_imbalanced$stderr
tt_balanced$stderr
# Example with chick weight data
head(chickwts)
table(chickwts$feed)
casein <- chickwts$weight[chickwts$feed == "casein"]
soybean <- chickwts$weight[chickwts$feed == "soybean"]
sunflower <- chickwts$weight[chickwts$feed == "sunflower"]
tt_balanced <- t.test(casein, sunflower)
tt_balanced
tt_balanced$stderr
# K = 2
set.seed(12143)
casein_oversampled <- sample(casein, 25, replace = TRUE)
tt_imbalanced <- t.test(casein_oversampled, sunflower)
tt_imbalanced
tt_imbalanced$stderr
tt_balanced$stderr
tt_balanced$stderr
tt_imbalanced$stderr
setwd("~/research/global_gp")
library(fields)
library(refund)
library(MBA)
size <- "small"
scen <- "scen2"
dir <- paste0("data/", size, "/", scen, "/")
load(paste0(dir, "train.RData"))
load(paste0(dir, "test.RData"))
Y <- rbind(matrix(train$Y, nrow = 200, ncol = 10),
matrix(test$Y, nrow = 25, ncol = 10))
X <- rbind(train$X, test$X)
#X <- as.data.frame(model.mat)
colnames(X) <- c("X1", "X2")
#dfl <- data.frame(temp = 1:225)
dfl <- as.data.frame(X)
dfl$Y <- Y
size <- "small"
scen <- "scen2"
dir <- paste0("data/", size, "/", scen, "/")
load(paste0(dir, "train.RData"))
load(paste0(dir, "test.RData"))
dim(train$Y)
dim(test$X)
dim(test$Y)
Y <- rbind(matrix(train$Y, nrow = 100, ncol = 10),
matrix(test$Y, nrow = 25, ncol = 10))
X <- rbind(train$X, test$X)
#X <- as.data.frame(model.mat)
colnames(X) <- c("X1", "X2")
#dfl <- data.frame(temp = 1:225)
dfl <- as.data.frame(X)
dfl$Y <- Y
#fit <- fosr.vs(data = dfl[1:200,], formula = Y ~ ., method = "grMCP")
#fit <- bayes_fosr(Y[1:200,] ~ model.mat[1:200,], est.method = "VB")
fit <- bayes_fosr(data = dfl[1:200,], Y ~ X1 + X2, est.method = "VB")
#fit <- fosr.vs(data = dfl[1:200,], formula = Y ~ ., method = "grMCP")
#fit <- bayes_fosr(Y[1:200,] ~ model.mat[1:200,], est.method = "VB")
fit <- bayes_fosr(data = dfl[1:100,], Y ~ X1 + X2, est.method = "VB")
fit$beta.hat
dim(dfl)
pred <- predict(object = fit, newdata = dfl[(n+1):(n+nTest),], interval = "prediction")
n <- nrow(train$Y)
nTest <- nrow(test$Y)
S <- nrow(train$Z)
STest <- nrow(test$Z)
pred <- predict(object = fit, newdata = dfl[(n+1):(n+nTest),], interval = "prediction")
dim(pred)
n
n <- nrow(train$X)
nTest <- nrow(test$X)
S <- nrow(train$Z)
STest <- nrow(test$Z)
#fit <- fosr.vs(data = dfl[1:200,], formula = Y ~ ., method = "grMCP")
#fit <- bayes_fosr(Y[1:200,] ~ model.mat[1:200,], est.method = "VB")
fit <- bayes_fosr(data = dfl[1:n,], Y ~ X1 + X2, est.method = "VB")
fit$beta.hat
pred <- predict(object = fit, newdata = dfl[(n+1):(n+nTest),], interval = "prediction")
dim(pred)
sqrt(mean((pred - Y[101:125,])^2))
